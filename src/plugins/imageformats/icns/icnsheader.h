#ifndef ICNSHEADER_H
#define ICNSHEADER_H

#include <QtCore/QtGlobal>
#include <QtGui/QImage>

struct IcnsBlockHeader
{
    quint32 magic;
    quint32 length;
};

#define IcnsBlockHeaderSize 8

enum IcnsMagic {
    icnsfile = 0x69636E73,
    TOC_ = 0x544F4320,
    icnV = 0x69636E56,
    // Note to everyone: These are deprecated types of icons.
    // What should we to do to them?
    tile = 0x74696c65,
    over = 0x6f766572,
    drop = 0x64726f70,
    open = 0x6f70656e,
    odrp = 0x6f647270
};

enum IcnsIconGroup {
    IconGroup16x12          = 0x6D, // "m"
    IconGroup16x16          = 0x73, // "s"
    IconGroup32x32          = 0x6C, // "l"
    IconGroup32x32Old       = 0x4E, // "N"
    IconGroup48x48          = 0x68, // "h"
    IconGroup128x128        = 0x33, // "t"
    IconGroupHDCompressed   = 0x63  // "c"
};

enum IcnsIconBitDepth {
    IconBitDepthInvalid = 0,
    IconMono = 1,
    Icon4bit = 4,
    Icon8bit = 8,
    IconRLE24 = 32
};

struct IcnsIconEntry
{
    IcnsBlockHeader header;         // Original block header
    quint8          iconGroup;      // ASCII character number pointing to a format or size
    quint8          iconBitDepth;   // For Uncompressed icons only
    bool            iconIsMask;     // For Uncompressed icons only
    quint32         imageDataOffset;// Offset from the initial position of the file/device
    quint32         imageDataSize;  // header.length - sizeof(header)
};

struct IcnsColorTableEntry
{
    quint8 red;
    quint8 green;
    quint8 blue;
};

static const IcnsColorTableEntry IcnsColorTable4bit[] =
{
   {0xFF, 0xFF, 0xFF},
   {0xFC, 0xF3, 0x05},
   {0xFF, 0x64, 0x02},
   {0xDD, 0x08, 0x06},
   {0xF2, 0x08, 0x84},
   {0x46, 0x00, 0xA5},
   {0x00, 0x00, 0xD4},
   {0x02, 0xAB, 0xEA},
   {0x1F, 0xB7, 0x14},
   {0x00, 0x64, 0x11},
   {0x56, 0x2C, 0x05},
   {0x90, 0x71, 0x3A},
   {0xC0, 0xC0, 0xC0},
   {0x80, 0x80, 0x80},
   {0x40, 0x40, 0x40},
   {0x00, 0x00, 0x00}
};

static const IcnsColorTableEntry IcnsColorTable8bit[] =
{
   {0xFF, 0xFF, 0xFF},
   {0xFF, 0xFF, 0xCC},
   {0xFF, 0xFF, 0x99},
   {0xFF, 0xFF, 0x66},
   {0xFF, 0xFF, 0x33},
   {0xFF, 0xFF, 0x00},
   {0xFF, 0xCC, 0xFF},
   {0xFF, 0xCC, 0xCC},
   {0xFF, 0xCC, 0x99},
   {0xFF, 0xCC, 0x66},
   {0xFF, 0xCC, 0x33},
   {0xFF, 0xCC, 0x00},
   {0xFF, 0x99, 0xFF},
   {0xFF, 0x99, 0xCC},
   {0xFF, 0x99, 0x99},
   {0xFF, 0x99, 0x66},
   {0xFF, 0x99, 0x33},
   {0xFF, 0x99, 0x00},
   {0xFF, 0x66, 0xFF},
   {0xFF, 0x66, 0xCC},
   {0xFF, 0x66, 0x99},
   {0xFF, 0x66, 0x66},
   {0xFF, 0x66, 0x33},
   {0xFF, 0x66, 0x00},
   {0xFF, 0x33, 0xFF},
   {0xFF, 0x33, 0xCC},
   {0xFF, 0x33, 0x99},
   {0xFF, 0x33, 0x66},
   {0xFF, 0x33, 0x33},
   {0xFF, 0x33, 0x00},
   {0xFF, 0x00, 0xFF},
   {0xFF, 0x00, 0xCC},
   {0xFF, 0x00, 0x99},
   {0xFF, 0x00, 0x66},
   {0xFF, 0x00, 0x33},
   {0xFF, 0x00, 0x00},
   {0xCC, 0xFF, 0xFF},
   {0xCC, 0xFF, 0xCC},
   {0xCC, 0xFF, 0x99},
   {0xCC, 0xFF, 0x66},
   {0xCC, 0xFF, 0x33},
   {0xCC, 0xFF, 0x00},
   {0xCC, 0xCC, 0xFF},
   {0xCC, 0xCC, 0xCC},
   {0xCC, 0xCC, 0x99},
   {0xCC, 0xCC, 0x66},
   {0xCC, 0xCC, 0x33},
   {0xCC, 0xCC, 0x00},
   {0xCC, 0x99, 0xFF},
   {0xCC, 0x99, 0xCC},
   {0xCC, 0x99, 0x99},
   {0xCC, 0x99, 0x66},
   {0xCC, 0x99, 0x33},
   {0xCC, 0x99, 0x00},
   {0xCC, 0x66, 0xFF},
   {0xCC, 0x66, 0xCC},
   {0xCC, 0x66, 0x99},
   {0xCC, 0x66, 0x66},
   {0xCC, 0x66, 0x33},
   {0xCC, 0x66, 0x00},
   {0xCC, 0x33, 0xFF},
   {0xCC, 0x33, 0xCC},
   {0xCC, 0x33, 0x99},
   {0xCC, 0x33, 0x66},
   {0xCC, 0x33, 0x33},
   {0xCC, 0x33, 0x00},
   {0xCC, 0x00, 0xFF},
   {0xCC, 0x00, 0xCC},
   {0xCC, 0x00, 0x99},
   {0xCC, 0x00, 0x66},
   {0xCC, 0x00, 0x33},
   {0xCC, 0x00, 0x00},
   {0x99, 0xFF, 0xFF},
   {0x99, 0xFF, 0xCC},
   {0x99, 0xFF, 0x99},
   {0x99, 0xFF, 0x66},
   {0x99, 0xFF, 0x33},
   {0x99, 0xFF, 0x00},
   {0x99, 0xCC, 0xFF},
   {0x99, 0xCC, 0xCC},
   {0x99, 0xCC, 0x99},
   {0x99, 0xCC, 0x66},
   {0x99, 0xCC, 0x33},
   {0x99, 0xCC, 0x00},
   {0x99, 0x99, 0xFF},
   {0x99, 0x99, 0xCC},
   {0x99, 0x99, 0x99},
   {0x99, 0x99, 0x66},
   {0x99, 0x99, 0x33},
   {0x99, 0x99, 0x00},
   {0x99, 0x66, 0xFF},
   {0x99, 0x66, 0xCC},
   {0x99, 0x66, 0x99},
   {0x99, 0x66, 0x66},
   {0x99, 0x66, 0x33},
   {0x99, 0x66, 0x00},
   {0x99, 0x33, 0xFF},
   {0x99, 0x33, 0xCC},
   {0x99, 0x33, 0x99},
   {0x99, 0x33, 0x66},
   {0x99, 0x33, 0x33},
   {0x99, 0x33, 0x00},
   {0x99, 0x00, 0xFF},
   {0x99, 0x00, 0xCC},
   {0x99, 0x00, 0x99},
   {0x99, 0x00, 0x66},
   {0x99, 0x00, 0x33},
   {0x99, 0x00, 0x00},
   {0x66, 0xFF, 0xFF},
   {0x66, 0xFF, 0xCC},
   {0x66, 0xFF, 0x99},
   {0x66, 0xFF, 0x66},
   {0x66, 0xFF, 0x33},
   {0x66, 0xFF, 0x00},
   {0x66, 0xCC, 0xFF},
   {0x66, 0xCC, 0xCC},
   {0x66, 0xCC, 0x99},
   {0x66, 0xCC, 0x66},
   {0x66, 0xCC, 0x33},
   {0x66, 0xCC, 0x00},
   {0x66, 0x99, 0xFF},
   {0x66, 0x99, 0xCC},
   {0x66, 0x99, 0x99},
   {0x66, 0x99, 0x66},
   {0x66, 0x99, 0x33},
   {0x66, 0x99, 0x00},
   {0x66, 0x66, 0xFF},
   {0x66, 0x66, 0xCC},
   {0x66, 0x66, 0x99},
   {0x66, 0x66, 0x66},
   {0x66, 0x66, 0x33},
   {0x66, 0x66, 0x00},
   {0x66, 0x33, 0xFF},
   {0x66, 0x33, 0xCC},
   {0x66, 0x33, 0x99},
   {0x66, 0x33, 0x66},
   {0x66, 0x33, 0x33},
   {0x66, 0x33, 0x00},
   {0x66, 0x00, 0xFF},
   {0x66, 0x00, 0xCC},
   {0x66, 0x00, 0x99},
   {0x66, 0x00, 0x66},
   {0x66, 0x00, 0x33},
   {0x66, 0x00, 0x00},
   {0x33, 0xFF, 0xFF},
   {0x33, 0xFF, 0xCC},
   {0x33, 0xFF, 0x99},
   {0x33, 0xFF, 0x66},
   {0x33, 0xFF, 0x33},
   {0x33, 0xFF, 0x00},
   {0x33, 0xCC, 0xFF},
   {0x33, 0xCC, 0xCC},
   {0x33, 0xCC, 0x99},
   {0x33, 0xCC, 0x66},
   {0x33, 0xCC, 0x33},
   {0x33, 0xCC, 0x00},
   {0x33, 0x99, 0xFF},
   {0x33, 0x99, 0xCC},
   {0x33, 0x99, 0x99},
   {0x33, 0x99, 0x66},
   {0x33, 0x99, 0x33},
   {0x33, 0x99, 0x00},
   {0x33, 0x66, 0xFF},
   {0x33, 0x66, 0xCC},
   {0x33, 0x66, 0x99},
   {0x33, 0x66, 0x66},
   {0x33, 0x66, 0x33},
   {0x33, 0x66, 0x00},
   {0x33, 0x33, 0xFF},
   {0x33, 0x33, 0xCC},
   {0x33, 0x33, 0x99},
   {0x33, 0x33, 0x66},
   {0x33, 0x33, 0x33},
   {0x33, 0x33, 0x00},
   {0x33, 0x00, 0xFF},
   {0x33, 0x00, 0xCC},
   {0x33, 0x00, 0x99},
   {0x33, 0x00, 0x66},
   {0x33, 0x00, 0x33},
   {0x33, 0x00, 0x00},
   {0x00, 0xFF, 0xFF},
   {0x00, 0xFF, 0xCC},
   {0x00, 0xFF, 0x99},
   {0x00, 0xFF, 0x66},
   {0x00, 0xFF, 0x33},
   {0x00, 0xFF, 0x00},
   {0x00, 0xCC, 0xFF},
   {0x00, 0xCC, 0xCC},
   {0x00, 0xCC, 0x99},
   {0x00, 0xCC, 0x66},
   {0x00, 0xCC, 0x33},
   {0x00, 0xCC, 0x00},
   {0x00, 0x99, 0xFF},
   {0x00, 0x99, 0xCC},
   {0x00, 0x99, 0x99},
   {0x00, 0x99, 0x66},
   {0x00, 0x99, 0x33},
   {0x00, 0x99, 0x00},
   {0x00, 0x66, 0xFF},
   {0x00, 0x66, 0xCC},
   {0x00, 0x66, 0x99},
   {0x00, 0x66, 0x66},
   {0x00, 0x66, 0x33},
   {0x00, 0x66, 0x00},
   {0x00, 0x33, 0xFF},
   {0x00, 0x33, 0xCC},
   {0x00, 0x33, 0x99},
   {0x00, 0x33, 0x66},
   {0x00, 0x33, 0x33},
   {0x00, 0x33, 0x00},
   {0x00, 0x00, 0xFF},
   {0x00, 0x00, 0xCC},
   {0x00, 0x00, 0x99},
   {0x00, 0x00, 0x66},
   {0x00, 0x00, 0x33},
   {0xEE, 0x00, 0x00},
   {0xDD, 0x00, 0x00},
   {0xBB, 0x00, 0x00},
   {0xAA, 0x00, 0x00},
   {0x88, 0x00, 0x00},
   {0x77, 0x00, 0x00},
   {0x55, 0x00, 0x00},
   {0x44, 0x00, 0x00},
   {0x22, 0x00, 0x00},
   {0x11, 0x00, 0x00},
   {0x00, 0xEE, 0x00},
   {0x00, 0xDD, 0x00},
   {0x00, 0xBB, 0x00},
   {0x00, 0xAA, 0x00},
   {0x00, 0x88, 0x00},
   {0x00, 0x77, 0x00},
   {0x00, 0x55, 0x00},
   {0x00, 0x44, 0x00},
   {0x00, 0x22, 0x00},
   {0x00, 0x11, 0x00},
   {0x00, 0x00, 0xEE},
   {0x00, 0x00, 0xDD},
   {0x00, 0x00, 0xBB},
   {0x00, 0x00, 0xAA},
   {0x00, 0x00, 0x88},
   {0x00, 0x00, 0x77},
   {0x00, 0x00, 0x55},
   {0x00, 0x00, 0x44},
   {0x00, 0x00, 0x22},
   {0x00, 0x00, 0x11},
   {0xEE, 0xEE, 0xEE},
   {0xDD, 0xDD, 0xDD},
   {0xBB, 0xBB, 0xBB},
   {0xAA, 0xAA, 0xAA},
   {0x88, 0x88, 0x88},
   {0x77, 0x77, 0x77},
   {0x55, 0x55, 0x55},
   {0x44, 0x44, 0x44},
   {0x22, 0x22, 0x22},
   {0x11, 0x11, 0x11},
   {0x00, 0x00, 0x00}
};

#endif // ICNSHEADER
